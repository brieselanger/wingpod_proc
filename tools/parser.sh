#!/bin/bash
#Parser to split raw data files of the 5HP Wingpod.
#
#Usage: Simply put the script and the raw files into into a same directory
#and run it. The splited files will be put into
#a separate output directory. Please check carefully which files may contain
#useful data afterwards! Remember that the time stamps of the raw data files
#where generated by the Raspberry Pi and may not match true time!
#Synchronizing the Pi while the logger running leads to jumps in the
#time stamps. In-terminal plotting function can be activated for
#the pressure sensors which might be helpful to indentify actual flight data.
#
#Alexander Buetow
#Free University of Berlin
#2018/08/15

FILES=("cpt6100_port0_data.txt" "cpt6100_port1_data.txt" \
	"cpt6100_port2_data.txt" "cpt6100_port3_data.txt" \
	"hmt310_data.txt" "novatel2txt_data.txt" \
	"usb1608fsplus_out.txt")
OUT_DIR='parser_output'

PLOT=True #do some cool and very retro in-terminal plots
WIDTH=120 #width of plot (no. of characters)
HEIGHT=40 #height

echo 'File parser for raw data files of the 5HP Wingpod'
echo 'Processing time: ' $(date)

if [ ! -d $OUT_DIR ]
then
	mkdir $OUT_DIR
fi

for VAR in ${FILES[@]}
do
	if [ -f $VAR ]
	then
		echo -e "\nSplitting file '$VAR'..."
		case $VAR in
			cpt*|hmt*)
				csplit -sz $VAR '/START/' '{*}' ;;
			novatel2*)
				csplit -sz $VAR '/#VERSIONA,USB2/' '{*}' ;;
			usb1608*)
				csplit -sz $VAR '/Serial number = 01AF444D/' '{*}'
				rm xx00 ;;
		esac

		TEMPS=$(ls xx??)
		COUNT=0
		for I in $TEMPS
		do
			if [ $VAR == "usb1608fsplus_out.txt" ]
			then
				FIRST=$(grep time: $I | head -n1 | awk '{print int($2)}')
				LAST=$(grep time: $I | tail -n1 | awk '{print int($2)}')
			else
				FIRST=$(sed -n 2p $I | awk '{print int($1)}') #get first timestamp of splitted file
				LAST=$(tail -n1 $I | awk '{print int($1)}') #get last timestamp
			fi
			DIFF=$(($LAST-$FIRST)) #calculate time difference
			HOURS=$(($DIFF/3600))
			MINS=$(($DIFF%3600/60))
			SECS=$(($DIFF%60))
			echo "File '$VAR.$COUNT' | Start time: " $(date -d @$FIRST -u +'%Y/%m/%d %H:%M:%S UTC') \
				" | End time: " $(date -d @$LAST -u +'%Y/%m/%d %H:%M:%S UTC') \
				" | Duration: "$HOURS"h"$MINS"min"$SECS"s"
                        if [ $DIFF -le 0 ]
                        then
                                echo -e "\033[33;7mWarning:\033[0;33m Negative time difference in file with suffix .$COUNT found! File may not be usable due to jumps in time stamps.\033[0m"
			elif [ $PLOT ] && [ ${VAR:0:3} == 'cpt' ] #do some plots for pressure sensors...simplifies to decide which files could be used.
			then
				echo "vvvv -Plot below- vvvv"
				cat $I | gnuplot -e "set terminal dumb $WIDTH $HEIGHT; \
					set autoscale; set xdata time; set timefmt \"%s\"; \
					set xlabel \"time\"; set ylabel \"counter\"; plot '-' using 1:3 with lines"
				echo -e "===================================================\n"
                        fi
			mv $I $OUT_DIR/$VAR.$COUNT
			let COUNT++
		done
		echo -e "\033[32m$COUNT separate files created!\033[0m"
	else
		echo -e "\033[33;7mWarning:\033[0;33m File '$VAR' not found!\033[0m"
	fi
done

